cheat_when_t uint8_t
{
    always   = 0
    not_dm   = 1
    not_coop = 2
    not_demo = 4
    not_menu = 8
    not_deh = 16
    not_net = not_dm|not_coop
    cht_never = not_net|not_demo
}

midi_meta_event_type_t uint8_t
{
    SEQUENCE_NUMBER = 0x0

    TEXT = 0x1
    COPYRIGHT = 0x2
    TRACK_NAME = 0x3
    INSTR_NAME = 0x4
    LYRICS = 0x5
    MARKER = 0x6
    CUE_POINT = 0x7

    CHANNEL_PREFIX = 0x20
    END_OF_TRACK = 0x2f

    SET_TEMPO = 0x51
    SMPTE_OFFSET = 0x54
    TIME_SIGNATURE = 0x58
    KEY_SIGNATURE = 0x59
    SEQUENCER_SPECIFIC = 0x7f
}

midi_controller_t uint32_t
{
    BANK_SELECT = 0x0
    MODULATION = 0x1
    BREATH_CONTROL = 0x2
    FOOT_CONTROL = 0x3
    PORTAMENTO = 0x4
    DATA_ENTRY = 0x5

    MAIN_VOLUME = 0x7
    PAN = 0xa
}

midi_event_type_t uint8_t
{
    NOTE_OFF = 0x80
    NOTE_ON = 0x90
    AFTERTOUCH = 0xa0
    CONTROLLER = 0xb0
    PROGRAM_CHANGE = 0xc0
    CHAN_AFTERTOUCH = 0xd0
    PITCH_BEND = 0xe0

    SYSEX = 0xf0
    SYSEX_SPLIT = 0xf7
    META = 0xff
}

packet_type_e uint8_t
{
    PKT_INIT
    PKT_SETUP
    PKT_GO
    PKT_TICC
    PKT_TICS
    PKT_RETRANS
    PKT_EXTRA
    PKT_QUIT
    PKT_DOWN
    PKT_WAD
    PKT_BACKOFF
}

Token std::size_t
{
    Identifier
    StringConst
    IntConst
    FloatConst
    BoolConst
    AndAnd
    OrOr
    EqEq
    NotEq
    GtrEq
    LessEq
    ShiftLeft
    ShiftRight

    NumSpecialTokens

    NoToken
}
